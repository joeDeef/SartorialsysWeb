paths:
  /products:
    post:
      tags:
        - Products
      summary: Add a new product
      description: Creates a new product with the provided data.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - name
                - price
                - category
              properties:
                code:
                  type: string
                name:
                  type: string
                price:
                  type: number
                  format: float
                category:
                  type: string
                  enum: ['Shirt', 'Accessory', 'Suit', 'Jacket', 'Pants']
                status:
                  type: boolean
                  default: true
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product created successfully"
                  product:
                    $ref: '#/components/schemas/Product'
        '409':
          description: Existing code
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "This code already exists: {code}"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
    get:
      tags:
        - Products
      summary: Retrieve all products
      description: Fetches a list of all products.
      parameters:
        - in: query
          name: category
          schema:
            type: string
          description: Filter products by category
      responses:
        '200':
          description: Products retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Products retrieved successfully"
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        '204':
          description: No products found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No products found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /products/{code}:
    get:
      tags:
        - Products
      summary: Retrieve a specific product
      description: Fetches a product by its code.
      parameters:
        - in: path
          name: code
          required: true
          description: Product Code
          schema:
            type: string
      responses:
        '200':
          description: Product retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  product:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No product found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /products/{code}/add-size:
    post:
      tags:
        - Products
      summary: Add a size to a product
      description: Adds a new size with associated colors to a product.
      parameters:
        - in: path
          name: code
          required: true
          description: Product Code
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - size
                - colors
              properties:
                size:
                  type: string
                  enum: ['S', 'M', 'L', 'XL']
                colors:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Size added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Size added successfully"
                  product:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
        price:
          type: number
          format: float
        category:
          type: string
          enum: ['Shirt', 'Accessory', 'Suit', 'Jacket', 'Pants']
        status:
          type: boolean
          default: true
        sizes:
          type: array
          items:
            type: object
            properties:
              size:
                type: string
                enum: ['S', 'M', 'L', 'XL']
              colors:
                type: array
                items:
                  type: string
