paths:
  /products:
    post:
      tags:
        - Products
      summary: Add a new product
      description: Creates a new product with the provided data.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
            example:
              code: "PROD123"
              name: "Casual Shirt"
              category: "Shirt"
              price: 49.99
              inventory:
                - size: "M"
                  colors:
                    - name: "Red"
                      amount: 20
                - size: "L"
                  colors:
                    - name: "Blue"
                      amount: 15
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product created successfully"
                  data:
                    $ref: '#/components/schemas/Product'
        '409':
          description: Existing code
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "This code already exists: PPA1263"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
    get:
      tags:
        - Products
      summary: Retrieve all products
      description: Fetches a list of all products.
      parameters:
        - in: query
          name: category
          schema:
            type: string
          description: Filter products by category
      responses:
        '200':
          description: Products retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Products retrieved successfully"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        '204':
          description: No products found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No products found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /products/upload-images/{code}:
    post:
      tags:
        - Products
      summary: Upload images for a product
      description: Uploads one or multiple images for a specific product using its unique code.
      parameters:
        - name: code
          in: path
          required: true
          description: Unique product code
          schema:
            type: string
          example: "PROD123"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  type: array
                  description: "Array of image files to upload"
                  items:
                    type: string
                    format: binary
              required:
                - images
      responses:
        '200':
          description: Images uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Images added"
                  data:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product not Found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /products/{code}/add-size:
    post:
      tags:
        - Products
      summary: Add a new size to a product
      description: Adds a new size with its corresponding colors to a product's inventory.
      parameters:
        - name: code
          in: path
          required: true
          description: Unique product code
          schema:
            type: string
          example: "PROD123"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - size
                - colors
              properties:
                size:
                  type: string
                  description: "Size to be added"
                  enum: ["S", "M", "L", "XL"]
                  example: "M"
                colors:
                  type: array
                  description: "List of colors with stock amounts"
                  items:
                    type: object
                    required:
                      - name
                      - amount
                    properties:
                      name:
                        type: string
                        description: "Color name"
                        example: "Red"
                      amount:
                        type: number
                        description: "Stock amount (must be >= 0)"
                        minimum: 0
                        example: 20
      responses:
        '200':
          description: Size added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Size added to inventory"
                  data:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product not found"
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid size or color data"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /products/{code}/{size}/add-color:
    post:
      tags:
        - Products
      summary: Add colors to a specific size of a product
      description: Adds one or multiple colors with stock to a specific size in a product's inventory.
      parameters:
        - name: code
          in: path
          required: true
          description: Unique product code
          schema:
            type: string
          example: "PROD123"
        - name: size
          in: path
          required: true
          description: The size to which the colors will be added
          schema:
            type: string
            enum: ["S", "M", "L", "XL"]
          example: "M"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - colors
              properties:
                colors:
                  type: array
                  description: "List of colors with stock amounts"
                  items:
                    type: object
                    required:
                      - name
                      - amount
                    properties:
                      name:
                        type: string
                        description: "Color name"
                        example: "Blue"
                      amount:
                        type: number
                        description: "Stock amount (must be >= 0)"
                        minimum: 0
                        example: 15
      responses:
        '200':
          description: Colors added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Colors added to the size"
                  data:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Product or size not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product or size not found"
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid color data"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /products/{code}:
    get:
      tags:
        - Products
      summary: Retrieve a specific product
      description: Fetches a product by its code.
      parameters:
        - in: path
          name: code
          required: true
          description: Product Code
          schema:
            type: string
      responses:
        '200':
          description: Product retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Product retrieved successfully
                  data:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No product found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
    put:
      tags:
        - Products
      summary: Update a product
      description: Updates the details of an existing product.
      parameters:
        - name: code
          in: path
          required: true
          description: Unique product code
          schema:
            type: string
          example: "PROD123"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
            example:
              name: "Updated Shirt"
              category: "Shirt"
              price: 39.99
              inventory:
                - size: "M"
                  colors:
                    - name: "Red"
                      amount: 10
                - size: "L"
                  colors:
                    - name: "Blue"
                      amount: 5
              available: true
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product updated successfully"
                  data:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product not found"
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid product data"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
    patch:
      tags:
        - Products
      summary: Partially update a product
      description: Updates specific fields of an existing product.
      parameters:
        - name: code
          in: path
          required: true
          description: Unique product code
          schema:
            type: string
          example: "PROD123"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Updated product name
                category:
                  type: string
                  enum: ["Shirt", "Accessory", "Suit", "Jacket", "Pants"]
                  description: Updated product category
                price:
                  type: number
                  format: float
                  description: Updated product price
                available:
                  type: boolean
                  description: Product availability status
                inventory:
                  type: array
                  items:
                    type: object
                    properties:
                      size:
                        type: string
                        enum: ["S", "M", "L", "XL"]
                        description: Size to update
                      colors:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: Color name
                            amount:
                              type: number
                              description: Updated stock amount
                            available:
                              type: boolean
                              description: Color availability
            example:
              name: "New Shirt Name"
              price: 55.99
              inventory:
                - size: "M"
                  colors:
                    - name: "Red"
                      amount: 10
                      available: true
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product updated successfully"
                  data:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product not found"
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid product data"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
    delete:
      tags:
        - Products
      summary: Delete a product
      description: Deletes a product based on its unique code.
      parameters:
        - name: code
          in: path
          required: true
          description: Unique product code
          schema:
            type: string
          example: "PROD123"
      responses:
        '200':
          description: Product deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product deleted successfully"
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /products/delete-image/{code}:
    delete:
      tags:
        - Products
      summary: Delete an image from a product
      description: Removes a specific image from a product based on its unique code.
      parameters:
        - name: code
          in: path
          required: true
          description: Unique product code
          schema:
            type: string
          example: "PROD123"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                imageName:
                  type: string
                  description: Name of the image to delete
                  example: "image1.jpg"
      responses:
        '200':
          description: Image deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Image deleted successfully"
                  data:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /products/{code}/{size}/remove:
    delete:
      tags:
        - Products
      summary: Remove a size from a product
      description: Removes a specific size from the inventory of a product.
      parameters:
        - name: code
          in: path
          required: true
          description: Unique product code
          schema:
            type: string
          example: "PROD123"
        - name: size
          in: path
          required: true
          description: Size to be removed
          schema:
            type: string
            enum: ["S", "M", "L", "XL"]
          example: "M"
      responses:
        '200':
          description: Size removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Size removed from the product"
                  data:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Product or size not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product or size not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /products/{code}/{size}/{color}/remove:
    delete:
      tags:
        - Products
      summary: Remove a color from a product size
      description: Removes a specific color from a given size in the product inventory.
      parameters:
        - name: code
          in: path
          required: true
          description: Unique product code
          schema:
            type: string
          example: "PROD123"
        - name: size
          in: path
          required: true
          description: Size from which the color will be removed
          schema:
            type: string
            enum: ["S", "M", "L", "XL"]
          example: "M"
        - name: color
          in: path
          required: true
          description: Color to be removed
          schema:
            type: string
          example: "Red"
      responses:
        '200':
          description: Color removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Color removed from the product"
                  data:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Product, size, or color not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product, size, or color not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

components:
  schemas:
    Product:
      type: object
      required:
        - code
        - name
        - category
        - price
        - inventory
      properties:
        code:
          type: string
          description: "Unique product code"
          example: "PROD123"
        name:
          type: string
          description: "Product name"
          example: "Casual Shirt"
        category:
          type: string
          description: "Product category"
          enum: ["Shirt", "Accessory", "Suit", "Jacket", "Pants"]
          example: "Shirt"
        price:
          type: number
          description: "Product price (must be >= 0)"
          minimum: 0
          example: 49.99
        inventory:
          type: array
          description: "List of available sizes and colors"
          items:
            type: object
            properties:
              size:
                type: string
                description: "Available sizes"
                enum: ["S", "M", "L", "XL"]
                example: "M"
              colors:
                type: array
                description: "Available colors for this size"
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: "Color name"
                      example: "Red"
                    amount:
                      type: number
                      description: "Stock amount (must be >= 0)"
                      minimum: 0
                      example: 20
                    available:
                      type: boolean
                      description: "Indicates if this color is available"
                      default: true
                      example: true
              available:
                type: boolean
                description: "Indicates if this size is available"
                default: true
                example: true
        available:
          type: boolean
          description: "Indicates if the product is available"
          default: true
          example: true
        deleted:
          type: boolean
          description: "Indicates if the product is deleted"
          default: false
          example: false
        images:
          type: array
          description: "List of image URLs"
          items:
            type: string
          example: ["https://example.com/image1.jpg", "https://example.com/image2.jpg"]
