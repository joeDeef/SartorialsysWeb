paths:
  /users:
    post:
      tags:
        - Users
      summary: Create a new user
      description: Creates a new user with the provided data.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User created successfully"
                  userCreated:
                    $ref: '#/components/schemas/User'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
    get:
      tags:
        - Users
      summary: Retrieve all users
      description: Fetches a list of all users.
      responses:
        '200':
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Users retrieved successfully"
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '204':
          description: No Users found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No users found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /users/{id}:
    get:
      tags:
        - Users
      summary: Retrieve a specific user
      description: Fetches a user by their unique ID.
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier for the user
          schema:
            type: string
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
    put:
      tags:
        - Users
      summary: Update a user
      description: Updates a user's information.
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier for the user
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User updated successfully"
                  userUpdated:
                    $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
    delete:
      tags:
        - Users
      summary: Delete a user
      description: Deletes a user by their unique ID.
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier for the user
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User deleted successfully"
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  /users/login:
    post:
      summary: User login
      description: Authenticates a user and returns a JWT token if the credentials are valid.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                  description: The email of the user.
                password:
                  type: string
                  format: password
                  example: secureUserPassword123
                  description: The password of the user.
              required:
                - email
                - password
      responses:
        '200':
          description: Successful login, returns a JWT token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: The JWT token for authenticated requests.
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"

components:
  schemas:
    User:
      type: object
      required:
        - name
        - last_name
        - email
        - password
      properties:
        name:
          type: string
          description: User's first name
        last_name:
          type: string
          description: User's last name
        email:
          type: string
          description: User's email address
        password:
          type: string
          description: User's password
        role:
          type: string
          description: User's Role (default -> user)
          example: user
          enum:
            - admin
            - user